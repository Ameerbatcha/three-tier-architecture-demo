pipeline {
    agent any

    tools {
        maven 'maven'
        nodejs 'nodejs'
    }

    parameters {
        choice(
            name: 'SERVICE_NAME',
            choices: ['catalogue', 'user', 'cart', 'shipping', 'ratings', 'payment', 'dispatch','mongo','mysql','web', 'ALL'],
            description: 'Select the service to deploy'
        )
    }

    stages {
        stage('SCM') {
            steps {
                deleteDir()
                git 'https://github.com/Ameerbatcha/three-tier-architecture-demo.git'
            }
        }

        stage('SAST') {
            steps {
                script {
                    def services = []
                    if (params.SERVICE_NAME == 'ALL') {
                        services = ['catalogue', 'user', 'cart', 'shipping', 'ratings', 'payment', 'dispatch', 'mongo', 'mysql', 'web']
                    } else {
                        services = [params.SERVICE_NAME]
                    }

                    for (String svc : services) {
                        dir("${svc}") {
                            if (fileExists('pom.xml')) {
                                // Java service
                                sh 'mvn clean compile'
                                withSonarQubeEnv('sonar') {
                                    sh 'mvn sonar:sonar'
                                }
                            } else if (fileExists('package.json')) {
                                // Node.js service
                                // Copy files to the remote server
                                sshPublisher(publishers: [
                                    sshPublisherDesc(
                                        configName: 'worker1',
                                        transfers: [
                                            sshTransfer(
                                                sourceFiles: '**/*',
                                                removePrefix: '',
                                                remoteDirectory: "/opt/${svc}",
                                                execCommand: """
                                                    cd /opt/${svc}
                                                    npm install
                                                    npm run lint
                                                    export SONAR_SCANNER_HOME=/path/to/sonar-scanner
                                                    export PATH=\$SONAR_SCANNER_HOME/bin:\$PATH
                                                    sonar-scanner -Dsonar.projectKey=${svc}
                                                """,
                                            )
                                        ],
                                        usePromotionTimestamp: false,
                                        verbose: true
                                    )
                                ])
                            } else {
                                echo "No known project type found for ${svc}"
                            }
                        }
                    }
                }
            }
        }
    }
}
